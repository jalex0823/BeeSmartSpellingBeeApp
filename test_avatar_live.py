#!/usr/bin/env python3
"""
Live Avatar Visibility Test

This script starts the Flask server and tests avatar loading in a real browser environment.
Usage: python test_avatar_live.py
"""

import os
import sys
import subprocess
import time
import webbrowser
from pathlib import Path

def test_flask_server():
    """Start Flask server and test avatar visibility"""
    print("🐝 Starting Live Avatar Visibility Test")
    print("=" * 50)
    
    try:
        # Change to project directory
        script_dir = Path(__file__).parent
        os.chdir(script_dir)
        
        print("📁 Starting Flask server...")
        
        # Start Flask app in background
        flask_process = subprocess.Popen([
            sys.executable, "AjaSpellBApp.py"
        ], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
        
        # Wait for server to start
        print("⏱️ Waiting for server to initialize...")
        time.sleep(3)
        
        # Check if server is running
        if flask_process.poll() is None:
            print("✅ Flask server started successfully!")
            print("🌐 Server running at http://localhost:5000")
            
            print("\n🎯 Manual Avatar Test Instructions:")
            print("   1. Opening browser to http://localhost:5000...")
            print("   2. Look for 3D bee avatar in logo section")
            print("   3. Avatar should be visible ABOVE the cards")
            print("   4. No 404 texture errors in browser console")
            print("   5. Avatar should be properly scaled (not tiny/huge)")
            
            # Open browser
            try:
                webbrowser.open("http://localhost:5000")
                print("✅ Browser opened!")
            except Exception as e:
                print(f"⚠️  Could not open browser automatically: {e}")
                print("   Please manually open http://localhost:5000")
            
            print("\n🔍 What to verify:")
            print("   • 3D bee avatar loads and is visible")
            print("   • Avatar appears ABOVE the content cards") 
            print("   • No texture loading errors in console")
            print("   • Avatar has proper size and positioning")
            print("   • All visual elements display correctly")
            
            print("\n⏳ Press CTRL+C when testing is complete...")
            
            try:
                # Keep server running until user stops
                flask_process.wait()
            except KeyboardInterrupt:
                print("\n🛑 Stopping Flask server...")
                flask_process.terminate()
                flask_process.wait()
                print("✅ Server stopped!")
                
        else:
            # Server failed to start
            stdout, stderr = flask_process.communicate()
            print("❌ Flask server failed to start!")
            print(f"Error: {stderr}")
            return False
            
        return True
        
    except Exception as e:
        print(f"❌ Error during live test: {e}")
        return False

def create_avatar_test_checklist():
    """Create a checklist file for manual avatar testing"""
    checklist_content = """
# 🐝 Avatar Visibility Test Checklist

## ✅ Pre-Test Setup
- [ ] Flask server running at http://localhost:5000
- [ ] Browser opened to application
- [ ] Developer console open (F12)

## 🎯 Avatar Visibility Tests

### 1. Initial Load Test
- [ ] Page loads without errors
- [ ] 3D bee avatar appears in logo section
- [ ] Avatar is visible (not hidden behind cards)
- [ ] No JavaScript errors in console

### 2. Z-Index & Positioning Test  
- [ ] Avatar appears ABOVE content cards
- [ ] Avatar container has proper z-index
- [ ] No clipping or overflow issues
- [ ] Avatar stays centered in container

### 3. Texture Loading Test
- [ ] No 404 errors for texture files in console
- [ ] Avatar displays with proper colors/textures
- [ ] MTL material files load correctly
- [ ] PNG texture files load without errors

### 4. Scaling & Camera Test
- [ ] Avatar has appropriate size (not tiny/huge)
- [ ] Avatar is properly centered in view
- [ ] Camera angle shows avatar clearly
- [ ] 3D model proportions look correct

### 5. Mobile Responsiveness Test
- [ ] Open developer tools mobile view
- [ ] Avatar remains visible on mobile
- [ ] No layout issues on smaller screens
- [ ] Touch interactions work properly

### 6. Performance Test
- [ ] Avatar loads smoothly without lag
- [ ] No excessive memory usage
- [ ] Smooth animations if any
- [ ] Responsive user interactions

## 🚀 Pass/Fail Criteria
**PASS**: All checkboxes above are checked ✅  
**FAIL**: Any critical visibility issues remain ❌

## 📝 Notes Section
Write any observations or issues here:


---
Generated by Avatar Visibility Fix System
"""
    
    checklist_file = Path("AVATAR_VISIBILITY_TEST_CHECKLIST.md")
    with open(checklist_file, 'w', encoding='utf-8') as f:
        f.write(checklist_content)
    
    print(f"📝 Test checklist created: {checklist_file}")
    return checklist_file

def main():
    """Run live avatar visibility test"""
    try:
        # Create test checklist
        checklist = create_avatar_test_checklist()
        
        # Run live test
        success = test_flask_server()
        
        if success:
            print("\n🎉 Live avatar test completed!")
            print(f"📝 Use checklist for detailed verification: {checklist}")
            return 0
        else:
            print("\n❌ Live test failed - check Flask server logs")
            return 1
            
    except KeyboardInterrupt:
        print("\n🛑 Test interrupted by user")
        return 0
    except Exception as e:
        print(f"\n❌ Test error: {e}")
        return 1

if __name__ == "__main__":
    sys.exit(main())